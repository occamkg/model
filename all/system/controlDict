/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  plus                                  |
|   \\  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

libs            ("liboverset.so");

application     pimpleDyMFoam;

startFrom       startTime;

startTime       0;

stopAt          endTime;

/*
//Solution
endTime         100;	//20
deltaT          1e-5;
writeControl    adjustableRunTime;
// writeControl    runTime;
writeInterval   0.2;
*/


//For testing the kinematics
endTime         2; // 5
deltaT          0.05; // 0.01
writeControl    runTime;
writeInterval   10;


purgeWrite      0;

writeFormat     ascii;

writePrecision  10;

writeCompression off;

timeFormat      general;

timePrecision   6;

// runTimeModifiable true;

// adjustTimeStep  yes;
maxCo           4;
maxDeltaT       0.01;

// ************************************************************************* //



functions
{

///////////////////////////////////////////////////////////////////////////
    inMassFlow
    {
        type            surfaceFieldValue;

        libs ("libfieldFunctionObjects.so");
        enabled         true;

        writeControl   timeStep;
        writeInterval  1;

        log             true;

        writeFields     false;

        regionType          patch;
        name      inlet;

	    operation       sum;
        fields
        (
            phi
        );
    }
///////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////
    outMassFlow
    {
        type            surfaceFieldValue;

        libs ("libfieldFunctionObjects.so");
        enabled         true;

		writeControl   timeStep;
		writeInterval  1;

        log             yes;

        writeFields     false;

        regionType          patch;
        name      outlet;

		operation       sum;
        fields
        (
            phi
        );
    }
///////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////

    fieldAverage
    {
        type            fieldAverage;
        libs ("libfieldFunctionObjects.so");
        enabled        false;
        writeControl   outputTime;

		//writeControl   timeStep;
		//writeInterval  100;

		//cleanRestart true;

		//timeStart       20;
		//timeEnd         200;

        fields
        (
            U
            {
                mean        on;
                prime2Mean  on;
                base        time;
            }

            p
            {
                mean        on;
                prime2Mean  on;
                base        time;
            }
        );
    }

///////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////

    forces_object
    {
        type forces;
        libs ("libforces.so");

        //writeControl outputTime;
        writeControl   timeStep;
        writeInterval  1;

        //// Patches to sample
        //patches ("body1" "body2" "body3");
        patches ("leftWing" "rightWing" "body");

        //// Name of fields
        pName p;
        Uname U;

        //// Density
        rho rhoInf;
        // https://www.engineersedge.com/physics/viscosity_of_air_dynamic_and_kinematic_14483.htm
        rhoInf 1.184; //25 degrees C

        //// Centre of rotation
        CofR (0 0 0);
    }

///////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////

    forceCoeffs_object
    {
        // rhoInf - reference density
        // CofR - Centre of rotation
        // dragDir - Direction of drag coefficient
        // liftDir - Direction of lift coefficient
        // pitchAxis - Pitching moment axis
        // magUinf - free stream velocity magnitude
        // lRef - reference length
        // Aref - reference area
        type forceCoeffs;
        libs ("libforces.so");
        //patches ("body1" "body2" "body3");
        patches ("leftWing" "rightWing" "body");

        pName p;
        Uname U;
        rho rhoInf;
        rhoInf 1.184;

        //// Dump to file
        log true;

        CofR (0.0 0 0);
        liftDir (0 1 0);
        dragDir (1 0 0);
        pitchAxis (0 0 1);
        magUInf 1; // 12.7;
        lRef 1.0;         // reference lenght for moments!!!
        Aref 1.0;	//2.0;         // reference area 1 for 2d

        writeControl   timeStep;
        writeInterval  1;
    }

///////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////

    minmaxdomain
    {
        type fieldMinMax;
        //type banana;

        libs ("libfieldFunctionObjects.so");

        enabled true;

        mode component;

        writeControl timeStep;
        writeInterval 1;

        log true;

        fields (p U k epsilon omega nut);
    }

///////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////
    yplus
    {
    	type yPlus;
    	functionObjectLibs ("libutilityFunctionObjects.so");
    	enabled true;
        writeControl outputTime;

        //writeControl timeStep;
        //writeInterval 1;
    }
///////////////////////////////////////////////////////////////////////////

};

